name: aks deployment terraform

on:
  push:
    branches:
    - main
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read


    steps:

    # Step 1: Checkout the repository
    - name: 'Checkout code'
      uses: actions/checkout@v3

    # Step 2: Set up Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    # Step 3: Extract Service Principal Credentials
    - name: Extract Azure Credentials
      id: azure_credentials
      run: |
        echo "::set-output name=clientId::$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .clientId)"
        echo "::set-output name=clientSecret::$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .clientSecret)"
        echo "::set-output name=subscriptionId::$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .subscriptionId)"
        echo "::set-output name=tenantId::$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .tenantId)"

    - name: Azure Login
      # Step 4: Log in to Azure using the extracted credentials
      uses: azure/login@v1
      with:
        client-id: ${{ steps.azure_credentials.outputs.clientId }}
        client-secret: ${{ steps.azure_credentials.outputs.clientSecret }}
        tenant-id: ${{ steps.azure_credentials.outputs.tenantId }}
        subscription-id: ${{ steps.azure_credentials.outputs.subscriptionId }}

    # Step 5: Initialize Terraform
    - name: Terraform init
      run: terraform init
      working-directory: aks-deploy/main.tf

    # Step 6: Terraform Plan (Optional, helps you see what will be applied)
    - name: Terraform Plan
      run: terraform plan
      working-directory: aks-deploy/main.tf

    # Step 7: Terraform Apply (to deploy the resources to Azure)
    - name: Terraform Apply
      run: terraform apply
      working-directory: aks-deploy/main.tf
